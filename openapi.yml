openapi: 3.0.2
info:
  version: 0.0.3
  title: MIT Libraries Discovery API
servers:
  - url: 'https://timdex-prod.herokuapp.com/api/v1'
tags:
  - name: Authenticate
    description: Authenticate with username / password to retrieve JWT Token
    externalDocs:
      description: Register for an account
      url: 'https://timdex-prod.herokuapp.com'
  - name: Search
    description: Query TIMDEX to identify records of interest.
  - name: Retrieve
  - name: Status
paths:
  /ping:
    get:
      operationId: ping
      tags:
        - Status
      responses:
        '200':
          description: OK
  /auth:
    get:
      tags:
        - Authenticate
      operationId: authenticate
      responses:
        '200':
          description: JWT token
          content:
            application/json:
              schema:
                type: string
                example: "eyJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoxMjM0NTY3ODkwLCJleHAiOjEwMDI3MjY3ODB9.EHQe7SfsmBQiow_x_NtPoXFXZM29oVxBo3DqDYURJ68"
      security:
        - basicAuth: []
  /search:
    get:
      tags:
        - Search
      operationId: search
      responses:
        '200':
          description: A list of search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Results'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            format: int32
      security:
        - jwtAuth: []
  '/record/{id}':
    get:
      tags:
        - Retrieve
      operationId: getByRecordID
      responses:
        '200':
          description: A single record
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullRecord'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: A record with that supplied ID was not found.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      security:
        - jwtAuth: []
components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid
  schemas:
    Holding:
      description: Summary location holdings information. Call `realtime_holdings_link` for recent information if present.
      type: object
      properties:
        location:
          type: string
        call_number:
          type: string
        summary:
          type: string
        notes:
            type: string
    Identifiers:
      description: standardized identifiers
      type: object
      properties:
        isbns:
          type: array
          items:
            type: string
        issns:
          type: array
          items:
            type: string
        doi:
          type: string
    Link:
      description: a url related to this item
      type: object
      properties:
        text:
          type: string
        url:
          type: string
          format: uri
        restrictions:
          type: string
        kind:
          description: >-
            what kind of link this is, such as full_text, restricted_full_text,
            sfx, unknown
          type: string
    Record:
      description: An abbreviated representation of a record
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: string
        full_record_link:
          description: link to the full record in this API
          type: string
          format: uri
        content_type:
          description: >-
            High level categorization of the type of content, such as text,
            still image, audio, etc.
          type: string
        format:
          description: >-
            High level categorization of the content format, such as online
            resource, CD, book, etc.
          type: string
        source_link:
          type: string
          format: uri
        realtime_holdings_link:
          type: string
          format: uri
        publication_date:
          type: string
        title:
          type: string
        links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
        authors:
          type: array
          items:
            type: string
        subjects:
          type: array
          items:
            type: string
        summary_holdings:
          type: array
          items:
            $ref: '#/components/schemas/Holding'
        source:
          type: string
    FullRecord:
      description: A full representation of a record
      allOf:
        - $ref: '#/components/schemas/Record'
        - $ref: '#/components/schemas/Identifiers'
        - type: object
          properties:
            available:
              type: boolean
            alternate_title:
              type: array
              items:
                type: string
            country_of_publication:
                type: string
            summary:
              type: string
            imprint:
              type: string
            languages:
              type: array
              items:
                type: string
            call_numbers:
              type: array
              items:
                type: string
            physical_description:
              type: string
            abstract:
              type: string
            notes:
              type: array
              items:
                type: string
            edition:
              type: string
            publication_frequency:
              type: string
    Results:
      type: object
      properties:
        hits:
          type: integer
          description: total search results for query
        results:
            items:
              type: array
              $ref: '#/components/schemas/Record'
